<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/UserInterface_markingMenuDisplaying.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="6/1/2017">
    <meta name="user-comments" content="enable">
    <meta name="description" content="UserInterface.markingMenuDisplaying Event">
    <meta name="topicid" content="GUID-C026E080-4B0B-4E16-838D-5FC3B01627B6">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <meta name="language" content="ENU">
    <title>UserInterface.markingMenuDisplaying Event</title>
    <link rel="stylesheet" href="../Style/jquery-ui.css"><script src="../Scripts/jquery-1.11.1.js"></script><script src="../Scripts/jquery-ui.js"></script><link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
          copyrightElement = document.getElementById('CopyrightNotice');
          copyrightElement.style.display = 'block';
          };
        </script><script>
          $(function() {
          $( "#tabs" ).tabs();
          });
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">UserInterface.markingMenuDisplaying Event</h1>
    <p class="api">
          Parent Object: <a href="UserInterface.htm">UserInterface</a></p>
    <h2 class="api">
          Description
        </h2>
    <p class="api">The markingMenuDisplaying event fires just before the marking menu and context menus are displayed. The marking menu is the round menu displayed when the user right-clicks the mouse within Fusion 360. The context menu is the vertical menu displayed. The event provides both the marking menu and the context menu so you can examine and edit the contents of either one or both of them before they are displayed. Fusion 360 will then display the marking and context menu that you've customized. If either one is empty it will not be displayed.<br /><br />Defined in namespace "adsk.core" and the header file is "adsk/core/UserInterface/UserInterface.h".</p>
    <h2 class="api">
          Syntax
        </h2>
    <div id="tabs">
      <ul>
        <li><a href="#Python">Python</a></li>
        <li><a href="#C++">C++</a></li>
      </ul>
      <div id="Python" class="api-code">
        <table class="api-code">
          <td><em>-------- Global variables ---------</em><br /><code><pre class="api-code"><span style="color:blue"># Global variable used to maintain a reference to all event handlers.</span><br />handlers = []<br /><br /></pre></code><br /><em>-------- Event handler class definition ---------</em><br /><code><pre class="api-code"><span style="color:blue"># Event handler for the markingMenuDisplaying event.</span><br />class MyMarkingMenuDisplayingHandler(adsk.core.MarkingMenuEventHandler):<br />    def __init__(self):<br />        super().__init__()<br />    def notify(self, args):<br />        eventArgs = adsk.core.MarkingMenuEventArgs.cast(args)<br /><br />        <span style="color:blue"># Code to react to the event.</span><br />        ui.messageBox('In MyMarkingMenuDisplayingHandler event handler.')<br /></pre></code><br /><br /><em>-------- Connect the handler to the event. ---------</em><br /><code><pre class="api-code"><span style="color:blue"># "userInterface_var" is a variable referencing a <a href="UserInterface.htm">UserInterface</a> object.</span><br />onMarkingMenuDisplaying = MyMarkingMenuDisplayingHandler()<br />userInterface_var.<b>markingMenuDisplaying</b>.add(onMarkingMenuDisplaying)<br />handlers.append(onMarkingMenuDisplaying)</pre></code></td>
        </table>
      </div>
      <div id="C++" class="api-code">
        <table class="api-code">
          <td><em>--------- Required include files. ---------</em><br /><code><pre class="api-code">#include &lt;Core/UserInterface/UserInterface.h&gt;<br />#include &lt;Core/UserInterface/MarkingMenuEvent.h&gt;<br />#include &lt;Core/UserInterface/MarkingMenuEventHandler.h&gt;<br />#include &lt;Core/UserInterface/MarkingMenuEventArgs.h&gt;<br /></pre></code><br /><br /><em>--------- Event handler class definition and global declaration. ---------<br /><code><pre class="api-code"><span style="color:blue">// Event handler for the markingMenuDisplaying event.</em></span><br />class MyMarkingMenuDisplayingEventHandler : public adsk::core::MarkingMenuEventHandler<br />{<br />public:<br />    void notify(const Ptr&lt;MarkingMenuEventArgs&gt;& eventArgs) override<br />    {<br />        <span style="color:blue">// Code to react to the event.</span><br />        ui.messageBox("In MyMarkingMenuDisplayingEventHandler event handler.");<br />    }<br />} _markingMenuDisplaying;<br /></pre></code><br /><br /><em>--------- Connect the handler to the event. ---------</em><br /><code><pre class="api-code"><span style="color:blue">// "userInterface_var" is a variable referencing a <a href="UserInterface.htm">UserInterface</a> object.</span><br /><span style="color:blue">// Connect the handler function to the event.</span><br />Ptr&lt;MarkingMenuEvent&gt; markingMenuDisplayingEvent = userInterface_var-&gt;<b>markingMenuDisplaying</b>();<br />if (!markingMenuDisplayingEvent)<br />    return;<br /><br />bool isOk = markingMenuDisplayingEvent-&gt;add(&_markingMenuDisplaying);<br />if (!isOk)<br />    return;<br /></pre></code></td>
        </table>
      </div>
    </div>
    <h2 class="api">
            Property Value
          </h2>This is an event property that returns a <a href="MarkingMenuEvent.htm">MarkingMenuEvent</a>.<h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="MarkingMenuSample_Sample.htm">Marking menu sample</a></td>
        <td class="api-list">Demonstrates how to customize marking menu and context menu.</td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version January 2017<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(UserInterface.markingMenuDisplaying%20Function%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>