<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/ExtrudeFeatureInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="19/8/2014">
    <meta name="user-comments" content="enable">
    <meta name="description" content="ExtrudeFeatureInput Object">
    <meta name="topicid" content="GUID-b2548e39-b93a-4b44-8749-4a5115f85ae8">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>ExtrudeFeatureInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">ExtrudeFeatureInput Object
        </h1>
              Derived from: <a href="Base.htm">Base</a> Object
            <h2 class="api">
          Description
        </h2>This class defines the methods and properties that pertain to the definition of an extrude  feature. This class also provides properties for setting/getting the Profile and Operation  of the extrude. The Profile and Operation are defined when the ExtrudeFeatures.createInput  method is called so they do not exist as properties on this class.<br /><br />Defined in namespace "adsk.fusion" and the header file is "Fusion/Features/ExtrudeFeatureInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_setOneSideExtent.htm">setOneSideExtent</a></td>
        <td class="api-list">Defines the extrusion to go in one direction from the profile. The extent of the extrusion is  defined by the extent argument.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_setSymmetricExtent.htm">setSymmetricExtent</a></td>
        <td class="api-list">Defines the extrusion to go symmetrically in both directions from the profile.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_setTwoSidesExtent.htm">setTwoSidesExtent</a></td>
        <td class="api-list">Defines the extrusion to go in both directions from the profile. The extent is defined independently for each direction using the input arguments.</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_creationOccurrence.htm">creationOccurrence</a></td>
        <td class="api-list">In order for geometry to be transformed correctly, an Occurrence for creation needs to be specified when the Extrusion is created based on geometry (e.g. a profile and/or face(s)) in another component AND (the Extrusion) is not in the root component. The CreationOccurrence is analogous to the active occurrence in the UI</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_extentOne.htm">extentOne</a></td>
        <td class="api-list">Gets the extent assinged for a single sided extrude or side one of a two-sided extrusion. To set the extent, use one of the set methods on the ExtrudeFeatureInput object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_extentTwo.htm">extentTwo</a></td>
        <td class="api-list">Gets the extent assinged for side two of the extrusion. If the extrude is single sided extrude this property will return null. The hasTwoExtents property can be used to determine if there are two sides or not. To set the extent, use one of the set methods on the ExtrudeFeatureInput object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_hasTwoExtents.htm">hasTwoExtents</a></td>
        <td class="api-list">Property that indicates if the extrusion is a single or two-sided extrusion. If false, the extentTwo and taperAngleTwo properties should not be used.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_isSolid.htm">isSolid</a></td>
        <td class="api-list">Specifies if the extrusion should be created as a solid or surface. If it's a surface then there aren't any end caps and it's open. When a ExtrudeFeature input is created, this is initialized to true so a solid will be created if it's not changed.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_operation.htm">operation</a></td>
        <td class="api-list">Gets and sets the type of operation performed by the extrusion.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_participantBodies.htm">participantBodies</a></td>
        <td class="api-list">Gets and sets the list of bodies that will participate in the feature when the operation is a cut or intersection.
 If this property has not been set, the default behavior is that all bodies that are intersected by the  feature will participate.
 This property can return null in the case where the feature has not been fully defined so that possible intersecting bodies can be computed.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_profile.htm">profile</a></td>
        <td class="api-list">Gets and sets the profiles or planar faces used to define the shape of the extrude. This property can return or be set with a single profile, a single planar face, or  an ObjectCollection consisting of multiple profiles and planar faces. When an  ObjectCollection is used all of the profiles and faces must be co-planar.
 To create a surface (non-solid) extrusion, you can use the createOpenProfile and createBRepEdgeProfile methods of the Component object to create an open profile. The isSolid property of the ExtrudeFeatureInput property must also be False.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_startExtent.htm">startExtent</a></td>
        <td class="api-list">Gets and sets the extent used to define the start of the extrusion. When a new ExtrudeFeatureInput object is created the start extent is initialized to be the profile plane but you can change it to a profile plane with offset or from an object by setting this property with either a  ProfilePlaneWithOffsetStartDefinition or a EntityStartDefinition object. You can get either one of those objects by using the static create method on the class.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_taperAngleOne.htm">taperAngleOne</a></td>
        <td class="api-list">Gets the value that will be used as the taper angle for a single sided extrusion or side one of a two-sided extrusion. To set the taper angle, use one of the set methods on the ExtrudeFeatureInput object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_taperAngleTwo.htm">taperAngleTwo</a></td>
        <td class="api-list">Gets the value that will be used as the taper angle for side two of a two-sided extrusion. If the extrusion is  single-sided, this property will return null. The hasTwoExtents property can be used to determine if there are two sides or not. To set the taper angle, use one of the set methods on the ExtrudeFeatureInput object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureInput_targetBaseFeature.htm">targetBaseFeature</a></td>
        <td class="api-list">When creating a feature that is owned by a base feature, set this property to the  base feature you want to associate the new feature with. By default, this is null, meaning it will not be associated with a base feature.
 Because of a current limitation, if you want to create a feature associated with a base feature, you must set this property AND call the startEdit method of the base feature, create the feature, and then call the finishEdit method of the base feature. The base feature must be in an "edit" state to be able to add any additional items to it.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="ExtrudeFeatures_createInput.htm">ExtrudeFeatures.createInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ExtrudeFeatureSample_Sample.htm">Extrude Feature API Sample</a></td>
        <td class="api-list">Demonstrates creating a new extrude feature.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ParticipantBodiesSample_Sample.htm">Manage Participant Bodies</a></td>
        <td class="api-list">Demonstrates how to manage participant During Cut operation. Same API can be used to manage participants During intersection also.</td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version August 2014<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                © Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(ExtrudeFeatureInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>