<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/IntegerSliderCommandInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="22/4/2015">
    <meta name="user-comments" content="enable">
    <meta name="description" content="IntegerSliderCommandInput Object">
    <meta name="topicid" content="GUID-3544b7b6-81ab-49d4-9bb7-ba46df8bd401">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>IntegerSliderCommandInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">IntegerSliderCommandInput Object
        </h1>
              Derived from: <a href="SliderCommandInput.htm">SliderCommandInput</a> Object
            <h2 class="api">
          Description
        </h2>Provides a command input to get the value of a slider from the user, the value type is integer.<br /><br />Defined in namespace "adsk.core" and the header file is "Core/UserInterface/IntegerSliderCommandInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_getText.htm">getText</a></td>
        <td class="api-list">Gets the texts of the slider if text has been defined.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_setText.htm">setText</a></td>
        <td class="api-list">Sets the text of the slider. Both the left and the right text should be set.</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_commandInputs.htm">commandInputs</a></td>
        <td class="api-list">Gets the CommandInputs class of the parent, which can be a Command, GroupCommandInput or TabCommandInput.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_expressionOne.htm">expressionOne</a></td>
        <td class="api-list">Uses an expression to set the value in the first input field. This can contain equations and is evaluated using the specified unit type.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_expressionTwo.htm">expressionTwo</a></td>
        <td class="api-list">Uses an expression to set the value in the second input field. This can contain equations and is evaluated using the specified unit type.
 This property is only available when the hasTwoSliders property returns true.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_hasTwoSliders.htm">hasTwoSliders</a></td>
        <td class="api-list">Gets if the command input has two sliders.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_id.htm">id</a></td>
        <td class="api-list">Gets the unique identifier for this input in the command's CommandInputs.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_isEnabled.htm">isEnabled</a></td>
        <td class="api-list">Gets or sets if this input is currently enabled or disabled for user interaction.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_isFullWidth.htm">isFullWidth</a></td>
        <td class="api-list">Gets or sets if this input fills the entire width of the dialog. If true, the name is ignored and the input control will fill the entire width of the command dialog. The default value for this property in a new command input if false, or not to fill the width. This property does not apply to GroupCommandInputs or TabCommandInputs.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_isVisible.htm">isVisible</a></td>
        <td class="api-list">Gets or sets if this input will be visible to the user.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_maximumValue.htm">maximumValue</a></td>
        <td class="api-list">Gets and sets maximum value of the slider. This will fail if there is a value list because the minimum and maximum values are defined by the value list.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_minimumValue.htm">minimumValue</a></td>
        <td class="api-list">Gets and sets minimum value of the slider. This will fail if there is a value list because the minimum and maximum values are defined by the value list.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_name.htm">name</a></td>
        <td class="api-list">Gets the user visible name of this input.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_parentCommand.htm">parentCommand</a></td>
        <td class="api-list">Gets the parent Command.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_parentCommandInput.htm">parentCommandInput</a></td>
        <td class="api-list">Gets the parent CommandInput if this commandInput is the child of a TabCommandInput or GroupCommandInput.  Returns null if their is no parent.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_spinStep.htm">spinStep</a></td>
        <td class="api-list">Gets and sets the spin step. This defines the amount the slider moves when the user clicks the spin button beside the value. The spin step should be more than zero.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_toolClipFilename.htm">toolClipFilename</a></td>
        <td class="api-list">Gets or sets the full filename of the image file (png) used for the tool clip. The tooltip is always shown but as the user hovers over the control it will progressively display  the tool clip and description text.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_tooltip.htm">tooltip</a></td>
        <td class="api-list">Gets or sets the base tooltip string. This is always shown for commands. If the tooltip description  and/or tool clip are also specified then the tooltip will progressively display more information as the  user hovers the mouse over the control.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_tooltipDescription.htm">tooltipDescription</a></td>
        <td class="api-list">Gets or sets additional text to display progressively along with the tooltip. The text for the description  can contain some basic html formatting tags to format the tags. For example the br tag can be used to  create multiple paragraphs. The tooltip is always shown but as the user hovers over the control it will  progressively display the tool clip and description text.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_unitType.htm">unitType</a></td>
        <td class="api-list">Gets and sets the unit type that is used when evaluating the user's input.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_valueList.htm">valueList</a></td>
        <td class="api-list">Gets the value list of the slider. The list is empty if this command input was not added by value list.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_valueOne.htm">valueOne</a></td>
        <td class="api-list">Gets or sets the value associated with the first slider.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="IntegerSliderCommandInput_valueTwo.htm">valueTwo</a></td>
        <td class="api-list">If the hasTwoSliders property is true, this returns the value associated with  the second slider.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="CommandInputs_addIntegerSliderCommandInput.htm">CommandInputs.addIntegerSliderCommandInput</a>, <a href="CommandInputs_addIntegerSliderListCommandInput.htm">CommandInputs.addIntegerSliderListCommandInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="CommandInputsSample_Sample.htm">Command Inputs API Sample</a></td>
        <td class="api-list"><p>Creates a command dialog that demonstrates all of the available command inputs.</p>

<p>To use the sample, create a new Python or C++ script and copy and paste this code, replacing the default code.  You also need to unpack this zip file which contains a <a href="../images/CommandInputsResources.zip">resource folder</a> into the same folder where the source code file (.py or .cpp) is.</p></td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version June 2015<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                © Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(IntegerSliderCommandInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>