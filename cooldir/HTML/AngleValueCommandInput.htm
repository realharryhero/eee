<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/AngleValueCommandInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="6/1/2017">
    <meta name="user-comments" content="enable">
    <meta name="description" content="AngleValueCommandInput Object">
    <meta name="topicid" content="GUID-E6F923D7-D6B0-4C15-A4AC-6B11C7712E0E">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>AngleValueCommandInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">AngleValueCommandInput Object
        </h1>
              Derived from: <a href="CommandInput.htm">CommandInput</a> Object
            <h2 class="api">
          Description
        </h2>Represents a command input that gets an angle from the user. This displays an entry in the command dialog where the user can enter a value and also displays a manipulator in the graphics window to allow them to graphically set the value. The input box is displayed in the dialog when the isVisible property of the command input is true. The manipulator is displayed in the graphics when both the isVisible and isEnabled properties are true.<br /><br />Defined in namespace "adsk.core" and the header file is "Core/UserInterface/AngleValueCommandInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_setManipulator.htm">setManipulator</a></td>
        <td class="api-list">Defines the position and orientation of the manipulator. The manipulator is only visible when both the isVisible and isEnabled properties are true. If those properties are true and the setManipulator has not been called, the manipulator will be displayed in a default location (0,0,0) using default directions; x direction (1,0,0) and y direction (0,1,0).  Because of that the input is typically set to be invisible and/or disabled and then enabled once  enough input has been specified that you can display the manipulator in the desired location.</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_commandInputs.htm">commandInputs</a></td>
        <td class="api-list">Gets the CommandInputs class of the parent, which can be a Command, GroupCommandInput or TabCommandInput.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_expression.htm">expression</a></td>
        <td class="api-list">Gets or sets the expression displayed in the input field. This can contain equations and references to parameters but must result in a valid angle expression. If units are not specified as part of the expression, the default user units of degrees are used.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_hasMaximumValue.htm">hasMaximumValue</a></td>
        <td class="api-list">Gets and sets if there is a maximum value for this command input. When setting this property, it is only valid to set it to False to remove the maximum value. Setting the maximumValue property will result in this property being set to True.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_hasMinimumValue.htm">hasMinimumValue</a></td>
        <td class="api-list">Gets and sets if there is a minimum value for this command input. When setting this property, it is only valid to set it to False to remove the minimum value. Setting the minimumValue property will result in this property being set to True.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_id.htm">id</a></td>
        <td class="api-list">Gets the unique identifier for this input in the command's CommandInputs.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isEnabled.htm">isEnabled</a></td>
        <td class="api-list">Gets or sets if this input is currently enabled or disabled for user interaction.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isFullWidth.htm">isFullWidth</a></td>
        <td class="api-list">Gets or sets if this input fills the entire width of the dialog. If true, the name is ignored and the input control will fill the entire width of the command dialog. The default value for this property in a new command input if false, or not to fill the width. This property does not apply to GroupCommandInputs or TabCommandInputs.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isMaximumValueInclusive.htm">isMaximumValueInclusive</a></td>
        <td class="api-list">Gets and sets if the value of the input includes the maximum value or is up to the maximum value. For example, if the maximum value is the value of pi (180 degrees) and this property is True, the maximum value can be pi.  If this is False, the minimum value must be less than pi. When the maximum value is first defined using the  maximumValue property, this property is set to True. The value returned by this property is only meaninful  when the hasMaximumValue property returns True.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isMinimumValueInclusive.htm">isMinimumValueInclusive</a></td>
        <td class="api-list">Gets and sets if the value of the input includes the minimum value or is up to the minimum value. For example, if the minimum value is zero and this property is True, the minimum value can be zero. If this is False, the  minimum value must be greater than zero. When the minimum value is first defined using the minimumValue property, this property is set to True. The value returned by this property is only meaningful when the hasMinimumValue property returns True.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isValidExpression.htm">isValidExpression</a></td>
        <td class="api-list">Returns true if the current expression is valid and can be evaluated. If this is false, the value returned should be ignored because there currently is not a valid value.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_isVisible.htm">isVisible</a></td>
        <td class="api-list">Gets or sets if this input will be visible to the user.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_manipulatorOrigin.htm">manipulatorOrigin</a></td>
        <td class="api-list">Gets the origin point of the manipulator in the model space of the root component. To set the origin use the setManipulator method.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_manipulatorXDirection.htm">manipulatorXDirection</a></td>
        <td class="api-list">Gets the X direction of the manipulator in the model space of the root component. The X direction is the 0 angle direction. This direction, along with the Y direction vector define the plane that the  manipulator is displayed on.
 To set the direction use the setManipulator method.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_manipulatorYDirection.htm">manipulatorYDirection</a></td>
        <td class="api-list">Gets the Y direction of the manipulator in the model space of the root component. The X and Y direction  vectors define the plane that the manipulator is displayed on.
 To set the direction use the setManipulator method.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_maximumValue.htm">maximumValue</a></td>
        <td class="api-list">Gets and sets maximum value, if any, that the value can be. The value is in radians. When getting this property you should first check the hasMaximumValue property to see if this property applies. Also, the isMaximumValueInclusive indicates if the minimum includes this value or will be up to this value.
 Setting this value will change the isMaximumValueInclusive to True and the hasMaximumValue  property to True if hasMaximumValue is currently False, otherwise it will just update the value.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_minimumValue.htm">minimumValue</a></td>
        <td class="api-list">Gets and sets minimum value, if any, that the value can be. The value is in radians. When getting this property you should first check the hasMinimumValue property to see if this property applies. Also, the isMinimumValueInclusive indicates if the minimum includes this value or will be up to this value.
 Setting this value will change the isMinimumValueInclusive to True and the hasMinimumValue  property to True if hasMinimumValue is currently False, otherwise it will just update the value.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_name.htm">name</a></td>
        <td class="api-list">Gets the user visible name of this input.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_parentCommand.htm">parentCommand</a></td>
        <td class="api-list">Gets the parent Command.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_parentCommandInput.htm">parentCommandInput</a></td>
        <td class="api-list">Gets the parent CommandInput if this commandInput is the child of a TabCommandInput or GroupCommandInput.  Returns null if their is no parent.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_toolClipFilename.htm">toolClipFilename</a></td>
        <td class="api-list">Gets or sets the full filename of the image file (png) used for the tool clip. The tooltip is always shown but as the user hovers over the control it will progressively display  the tool clip and description text.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_tooltip.htm">tooltip</a></td>
        <td class="api-list">Gets or sets the base tooltip string. This is always shown for commands. If the tooltip description  and/or tool clip are also specified then the tooltip will progressively display more information as the  user hovers the mouse over the control.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_tooltipDescription.htm">tooltipDescription</a></td>
        <td class="api-list">Gets or sets additional text to display progressively along with the tooltip. The text for the description  can contain some basic html formatting tags to format the tags. For example the br tag can be used to  create multiple paragraphs. The tooltip is always shown but as the user hovers over the control it will  progressively display the tool clip and description text.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="AngleValueCommandInput_value.htm">value</a></td>
        <td class="api-list">Gets and sets the current value of the command input. The value is in radians but will be displayed to the user in degrees. Setting this value can fail if the input value is  not within the minimum and maximum value range.
 The isValidExpression property should be checked before using the value within the command  because if the expression can't be evaluated there isn't a valid value. Fusion 360 won't allow  the execution of a command that contains ValueCommandInput object with invalid expressions  so you can dependably use the value in the execute event of the command.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="CommandInputs_addAngleValueCommandInput.htm">CommandInputs.addAngleValueCommandInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="CommandInputsSample_Sample.htm">Command Inputs API Sample</a></td>
        <td class="api-list"><p>Creates a command dialog that demonstrates all of the available command inputs.</p>

<p>To use the sample, create a new Python or C++ script and copy and paste this code, replacing the default code.  You also need to unpack this zip file which contains a <a href="../images/CommandInputsResources.zip">resource folder</a> into the same folder where the source code file (.py or .cpp) is.</p></td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version January 2017<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                © Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(AngleValueCommandInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>