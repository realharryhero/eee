<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/LoftFeatureInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="19/8/2016">
    <meta name="user-comments" content="enable">
    <meta name="description" content="LoftFeatureInput Object">
    <meta name="topicid" content="GUID-116CA8F5-082A-4B57-8BFD-A8C8B795203E">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>LoftFeatureInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">LoftFeatureInput Object
        </h1>
              Derived from: <a href="Base.htm">Base</a> Object
            <h2 class="api">
          Description
        </h2>This object defines the all of the input necessary to create a loft feature. It is the  programming equivalent to the Loft command dialog. Through this object you provide the input needed to fully define a loft. To create the loft feature you pass  this object the the LoftFeatures.add method.<br /><br />Defined in namespace "adsk.fusion" and the header file is "Fusion/Features/LoftFeatureInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_centerLineOrRails.htm">centerLineOrRails</a></td>
        <td class="api-list">The single centerline or set of rails that define the shape of the loft. Use methods on the returned LoftCenterLineOrRails object to define the centerline or rails.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_creationOccurrence.htm">creationOccurrence</a></td>
        <td class="api-list">In order for geometry to be transformed correctly, an Occurrence for creation needs to be specified when the loft is created based on geometry (e.g. a profile and/or face(s)) when the loft is being created in another component AND the loft is not in the root component. The CreationOccurrence is analogous to the active occurrence in the UI</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_isSolid.htm">isSolid</a></td>
        <td class="api-list">Specifies if the loft should be created as a solid or surface. This is initialized to true so a solid will attempt to be created if it's not changed.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_loftSections.htm">loftSections</a></td>
        <td class="api-list">The set of sections, (or profiles as they're referred to in the user-interface), that the loft will pass through. Use the add method on the LoftSections object to specify new sections.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_operation.htm">operation</a></td>
        <td class="api-list">Gets and sets the type of operation performed by the loft.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_participantBodies.htm">participantBodies</a></td>
        <td class="api-list">Gets and sets the list of bodies that will participate in the feature when the operation is a cut or intersection.
 If this property has not been set, the default behavior is that all bodies that are intersected by the  feature will participate.
 This property can return null in the case where the feature has not been fully defined so that possible intersecting bodies can be computed.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureInput_targetBaseFeature.htm">targetBaseFeature</a></td>
        <td class="api-list">When creating a feature that is owned by a base feature, set this property to the  base feature you want to associate the new feature with. By default, this is null, meaning it will not be associated with a base feature.
 Because of a current limitation, if you want to create a feature associated with a base feature, you must set this property AND call the startEdit method of the base feature, create the feature, and then call the finishEdit method of the base feature. The base feature must be in an "edit" state to be able to add any additional items to it.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="LoftFeatures_createInput.htm">LoftFeatures.createInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="LoftFeatureSample_Sample.htm">Loft Feature API Sample</a></td>
        <td class="api-list">Demonstrates creating a new loft feature.</td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version August 2016<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(LoftFeatureInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>