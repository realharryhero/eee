<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/AssemblyTraversalUsingRecursion_Sample.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="">
    <meta name="user-comments" content="enable">
    <meta name="description" content="Assembly traversal using recursion Sample">
    <meta name="topicid" content="GUID-5a4fa3a6-fa21-11e4-b610-f8b156d7cd97">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <meta name="language" content="ENU">
    <title>Assembly traversal using recursion</title>
    <link rel="stylesheet" href="../Style/jquery-ui.css"><script src="../Scripts/jquery-1.11.1.js"></script><script src="../Scripts/jquery-ui.js"></script><link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
          copyrightElement = document.getElementById('CopyrightNotice');
          copyrightElement.style.display = 'block';
          };
        </script><script>
          $(function() {
          $( "#tabs" ).tabs();
          });
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">Assembly traversal using recursion API Sample
        </h1>
    <h2 class="api">
          Description
        </h2>Traverses the entire structure of the currently open assemlby using a recursive function and displays the result in a message box. This will match the occurrence structure seen in the browser.<h2 class="api">
          Code Samples
        </h2>
    <div id="tabs">
      <ul>
        <li><a href="#Python">Python</a></li>
        <li><a href="#C++">C++</a></li>
      </ul>
      <div id="Python" class="api-code">
        <pre class="api-code">import adsk.core, adsk.fusion, traceback

<span style="color:blue"># Performs a recursive traversal of an entire assembly structure.</span>
def traverseAssembly(occurrences, currentLevel, inputString):
    for i in range(0, occurrences.count):
        occ = occurrences.item(i)

        inputString += spaces(currentLevel * 5) + 'Name: ' + occ.name + '\n'
        
        if occ.childOccurrences:
            inputString = traverseAssembly(occ.childOccurrences, currentLevel + 1, inputString)

    return inputString


<span style="color:blue"># Returns a string containing the especified number of spaces.</span>
def spaces(spaceCount):
    result = ''
    for i in range(0, spaceCount):
        result += ' '

    return result

def run(context):
    ui = None
    try:
        app = adsk.core.Application.get()
        ui  = app.userInterface
        
        product = app.activeProduct
        design = adsk.fusion.Design.cast(product)
        if not design:
            ui.messageBox('No active Fusion design', 'No Design')
            return

        <span style="color:blue"># Get the root component of the active design.</span>
        rootComp = design.rootComponent
        

        <span style="color:blue"># Create the title for the output.</span>
        resultString = 'Assembly structure of ' + design.parentDocument.name + '\n'
        
        <span style="color:blue"># Call the recursive function to traverse the assembly and build the output string.</span>
        resultString = traverseAssembly(rootComp.occurrences.asList, 1, resultString)

        <span style="color:blue"># Display the result.</span>
        ui.messageBox(resultString)
    except:
        if ui:
            ui.messageBox('Failed:\n{}'.format(traceback.format_exc()))</pre>
      </div>
      <div id="C++" class="api-code">
        <pre class="api-code">#include &lt;Core/Application/Application.h&gt;
#include &lt;Core/Application/Documents.h&gt;
#include &lt;Core/Application/Document.h&gt;
#include &lt;Core/Application/Product.h&gt;
#include &lt;Core/Geometry/Matrix3D.h&gt;
#include &lt;Core/UserInterface/UserInterface.h&gt;
#include &lt;Fusion/Components/Component.h&gt;
#include &lt;Fusion/Components/Occurrence.h&gt;
#include &lt;Fusion/Components/Occurrences.h&gt;
#include &lt;Fusion/Components/OccurrenceList.h&gt;
#include &lt;Fusion/Fusion/Design.h&gt;

using namespace adsk::core;
using namespace adsk::fusion;

Ptr&lt;UserInterface&gt; ui;

<span style="color:blue">// Returns a string containing the especified number of spaces.</span>
std::string spaces(size_t spaceCount) {
	std::string result = "";
	for (size_t i = 0; i &lt; spaceCount; ++i) {
		result += " ";
	}
	return result;
}

<span style="color:blue">// Performs a recursive traversal of an entire assembly structure.</span>
std::string traverseAssembly(Ptr&lt;OccurrenceList&gt; occurrences, size_t currentLevel, std::string inputString) {
	if(occurrences) {
		for (size_t i = 0; i &lt; occurrences-&gt;count(); ++i) {
			Ptr&lt;Occurrence&gt; occ = occurrences-&gt;item(i);
			if(occ) {
				inputString += spaces(currentLevel * 5) + "Name: " + occ-&gt;name() + "\n";

				if (occ-&gt;childOccurrences()) {
					inputString = traverseAssembly(occ-&gt;childOccurrences(), currentLevel + 1, inputString);
				}
			}
		}
	}

	return inputString;
}

extern "C" XI_EXPORT bool run(const char* context)
{
	Ptr&lt;Application&gt; app = Application::get();
	if (!app)
		return false;

	ui = app-&gt;userInterface();
	if (!ui)
		return false;

	Ptr&lt;Documents&gt; documents = app-&gt;documents();
	if (!documents)
		return false;

	Ptr&lt;Document&gt; doc = documents-&gt;add(DocumentTypes::FusionDesignDocumentType);
	if (!doc)
		return false;

	Ptr&lt;Product&gt; product = app-&gt;activeProduct();
	if (!product)
		return false;

	Ptr&lt;Design&gt; design = product;
	if (!design)
		return false;

	<span style="color:blue">// Get the root component of the active design</span>
	Ptr&lt;Component&gt; rootComp = design-&gt;rootComponent();
	if(!rootComp)
		return false;

	Ptr&lt;Occurrences&gt; occurrences = rootComp-&gt;occurrences();
	if(!occurrences)
		return false;
	occurrences-&gt;addNewComponent(Matrix3D::create());
	occurrences-&gt;addNewComponent(Matrix3D::create());

	<span style="color:blue">// Create the title for the output.</span>
	std::string resultString = "Assembly structure of " + design-&gt;parentDocument()-&gt;name() + "\n";

	<span style="color:blue">// Call the recursive function to traverse the assembly and build the output string.</span>
	resultString = traverseAssembly(occurrences-&gt;asList(), 1, resultString);

	return true;
}


#ifdef XI_WIN

#include &lt;windows.h&gt;

BOOL APIENTRY DllMain(HMODULE hmodule, DWORD reason, LPVOID reserved)
{
	switch (reason)
	{
	case DLL_PROCESS_ATTACH:
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

#endif <span style="color:blue">// XI_WIN</span></pre>
      </div>
    </div><br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(AssemblyTraversalUsingRecursion%20Sample%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>