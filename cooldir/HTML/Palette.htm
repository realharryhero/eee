<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/Palette.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="22/2/2017">
    <meta name="user-comments" content="enable">
    <meta name="description" content="Palette Object">
    <meta name="topicid" content="GUID-F9998A83-E4E7-4EBF-946C-56EC9A37A609">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>Palette Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">Palette Object
        </h1>
              Derived from: <a href="Base.htm">Base</a> Object
            <h2 class="api">
          Description
        </h2>A Palette is a floating or docked dialog in Fusion 360. The browser is an example of a built-in palette. The contents of a custom palette are created by displaying an html file.<br /><br />Defined in namespace "adsk.core" and the header file is "Core/UserInterface/Palette.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_deleteMe.htm">deleteMe</a></td>
        <td class="api-list">Deletes this palette. Fusion 360 native palettes cannot be deleted. Use the isNative property to determine if this is a native or API created palette.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_sendInfoToHTML.htm">sendInfoToHTML</a></td>
        <td class="api-list"><p>Sends the string to the JavaScript associated with the loaded HTML. A variation of the event handler below should be implemented in the JavaScript associated with the HTML to receive the data. The event will be triggered by Fusion 360 whenever the sendInfoToHTML method  is called.</p> <pre class="api-code">window.fusionJavaScriptHandler = {
    handle: function(actionString, dataString){
        confirm('Action from Fusion: ' + actionString);
        confirm('Data from Fusion: ' + dataString);
        
        // Build up JSON return string.
        var result = {};
        result.status = 'OK';
        var response = JSON.stringify(result);
        return response;
    }
};</pre><p>Your JavaScript code should always return something in response because an empty string response is assumed to be a failure.</p></td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_setMaximumSize.htm">setMaximumSize</a></td>
        <td class="api-list">Sets the maximum size of the palette. The user cannot resize it to be larger than this size. This does not change the current size of the palette unless the palette is already larger than this size.
 Calling this method and setting the width and height to zero, removes the maximum size restriction.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_setMinimumSize.htm">setMinimumSize</a></td>
        <td class="api-list">Sets the minimum size of the palette. The user cannot resize it to be smaller than this size. This does not change the current size of the palette unless the palette is already smaller than this size.
 Calling this method and setting the width and height to zero, removes the minimum size restriction.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_setPosition.htm">setPosition</a></td>
        <td class="api-list">Sets the position of the palette. If the palette is docked or snapped, this will result in changing it to be floating.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_setSize.htm">setSize</a></td>
        <td class="api-list">Sets the size of the palette. This is best used for a floating palette because either the width or height can be locked when a palette is docked.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_snapTo.htm">snapTo</a></td>
        <td class="api-list">Snaps this palette to another palette.</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_dockingOption.htm">dockingOption</a></td>
        <td class="api-list">Defines the docking behavior for this palette. This controls how the user is allowed to dock the palette.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_dockingState.htm">dockingState</a></td>
        <td class="api-list">Gets and sets how the palette is currented docked.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_height.htm">height</a></td>
        <td class="api-list">Gets and sets the height of the palette. Setting this property may not always set the height. Depending on how the palette is docked or snapped, the height may not be editable.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_htmlFileURL.htm">htmlFileURL</a></td>
        <td class="api-list">Gets and sets the URL to the html file currently being displayed. This can be local or on the web.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_id.htm">id</a></td>
        <td class="api-list">Gets The unique, language independent, ID of this palette.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_isNative.htm">isNative</a></td>
        <td class="api-list">Indicates if this is one of the standard Fusion 360 palettes or a custom palette created through the API. If true, it is a standard Fusion 360 palette and will have some restrictions on changing its properties and cannot be deleted.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_isVisible.htm">isVisible</a></td>
        <td class="api-list">Gets and sets whether this palette is currently being displayed in the user interface.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_left.htm">left</a></td>
        <td class="api-list">Gets and sets the left side of the palette relative to screen space and in pixels. Because palettes can be positioned outside of the Fusion 360 window, a value of zero indicates the left side of the screen and not the  Fusion 360 window.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_name.htm">name</a></td>
        <td class="api-list">Gets and set the name of the palette as seen in the user interface. The name of native palletes cannot be set.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_top.htm">top</a></td>
        <td class="api-list">Gets and sets the top of the palette relative to screen space and in pixels. Because palettes can be positioned outside of the Fusion 360 window, a value of zero indicates the top of the screen and not the  Fusion 360 window.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_width.htm">width</a></td>
        <td class="api-list">Gets and sets the width of the palette. Setting this property may not always set the width. Depending on how the palette is docked or snapped, the width may not be editable.</td>
      </tr>
    </Table>
    <h2 class="api">
            Events
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_closed.htm">closed</a></td>
        <td class="api-list">This event is fired when the user clicks the "Close" button on the palette. You can choose if the "Close" button is available or not when you initially create the palette. When a palette is closed, it still exists but is change to invisible so you can still interact with it and retrieve any needed information and can make it visible again. Use the deleteMe method to delete the palette.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="Palette_incomingFromHTML.htm">incomingFromHTML</a></td>
        <td class="api-list">This event is fired when the JavaScript associated with the HTML calls the  adsk.fusionSendData function. This allows the HTML to communicate with the add-in by passing information to the add-in.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="Palettes_add.htm">Palettes.add</a>, <a href="Palettes_item.htm">Palettes.item</a>, <a href="Palettes_itemById.htm">Palettes.itemById</a><h2 class="api">
            Derived Classes
          </h2><a href="TextCommandPalette.htm">TextCommandPalette</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="PaletteSample_Sample.htm">Palette Sample</a></td>
        <td class="api-list"><p>Demonstrates how to create a palette, how to dock and snap palettes and how Fusion communicates with the palette HTML. The sample is an add-in.  To use it, create a new Python or C++ add-in and replace the code with the code below. You also need to create an html file using the name and code below. The html file needs to be in the same folder as the py or dll file.</p>

<h3 class="api">palette.html</h3>
<pre class="api-code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p id='p1'&gt;Click the button below or use the "Send info to HTML" command in the ADD-INS panel.&lt;/p&gt;
        &lt;button type='button' onclick='sendInfoToFusion()'&gt;Click to send info to Fusion&lt;/button&gt; 
        &lt;br /&gt;&lt;br /&gt;
    &lt;/body&gt;
    &lt;script&gt;
        function sendInfoToFusion(){
            var args = {
                arg1 : "Sample argument 1",
                arg2 : "Sample argument 2"
            };
            adsk.fusionSendData('send', JSON.stringify(args));
        }
        
        window.fusionJavaScriptHandler = {handle: function(action, data){
            try {
                if (action == 'send') {
					<span style="color:blue">// Update a paragraph with the data passed in.</span>
					document.getElementById('p1').innerHTML = data;
				}
				else if (action == 'debugger') {
                    debugger;
				}
				else {
					return 'Unexpected command type: ' + action;
                }
            } catch (e) {
                console.log(e);
                console.log('exception caught with command: ' + action + ', data: ' + data);
            }
            return 'OK';
        }};
    &lt;/script&gt;
&lt;/html&gt;
</pre></td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version March 2017<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                © Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(Palette%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>