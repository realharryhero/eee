<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/PatchFeatureInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="23/6/2016">
    <meta name="user-comments" content="enable">
    <meta name="description" content="PatchFeatureInput Object">
    <meta name="topicid" content="GUID-2DF9786A-A0F8-4A66-9123-FAF48210FAB6">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>PatchFeatureInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">PatchFeatureInput Object
        </h1>
              Derived from: <a href="Base.htm">Base</a> Object
            <h2 class="api">
          Description
        </h2>This class defines the methods and properties that pertain to the definition of a patch feature.<br /><br />Defined in namespace "adsk.fusion" and the header file is "Fusion/Features/PatchFeatureInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_boundaryCurve.htm">boundaryCurve</a></td>
        <td class="api-list">Gets and set the input geometry that will be used to define the boundary. This can be a sketch profile,  a single sketch curve, a single B-Rep edge, or a Path object. 
 If a single sketch curve or B-Rep edge is input, that is not closed, Fusion 360 will automatically find connected sketch curves  or B-Rep edges in order to define a closed loop. All sketch curves are valid as input. BRepEdges are valid if they are  an "open" edge, which means they are only used by one face.
 If a Path is input it must define a closed shape and the B-Rep edges must be valid "open" edges.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_continuity.htm">continuity</a></td>
        <td class="api-list">Gets and sets type of surface continuity to use when matching boundary edges to face edges. When a new PatchFeatureInput is  created, this is initialized to ConnectedSurfaceContinuityType. This value is ignored when creating a patch for sketch curves.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_creationOccurrence.htm">creationOccurrence</a></td>
        <td class="api-list">In order for geometry to be transformed correctly, an Occurrence for creation needs to be specified when the Patch feature is created based on geometry (e.g. a profile, edges, faces) in another component AND (the Patch feature) is not in the root component. The CreationOccurrence is analogous to the active occurrence in the UI</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_operation.htm">operation</a></td>
        <td class="api-list">Gets and sets the type of operation performed by the patch feature. Only 'NewBodyFeatureOperation' and 'NewComponentFeatureOperation' are  valid operations for patch features.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureInput_targetBaseFeature.htm">targetBaseFeature</a></td>
        <td class="api-list">When creating a feature that is owned by a base feature, set this property to the  base feature you want to associate the new feature with. By default, this is null, meaning it will not be associated with a base feature.
 Because of a current limitation, if you want to create a feature associated with a base feature, you must set this property AND call the startEdit method of the base feature, create the feature, and then call the finishEdit method of the base feature. The base feature must be in an "edit" state to be able to add any additional items to it.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="PatchFeatures_createInput.htm">PatchFeatures.createInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="PatchFeatureSample_Sample.htm">Patch Feature API Sample</a></td>
        <td class="api-list">Demonstrates creating a new patch feature.</td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version July 2016<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(PatchFeatureInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>