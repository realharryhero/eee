<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/ConstructionAxisInput.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="19/8/2014">
    <meta name="user-comments" content="enable">
    <meta name="description" content="ConstructionAxisInput Object">
    <meta name="topicid" content="GUID-cc20ff60-c9da-415b-9d2b-f7b2f9eaab16">
    <meta name="language" content="ENU">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <title>ConstructionAxisInput Object</title>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
            copyrightElement = document.getElementById('CopyrightNotice');
            copyrightElement.style.display = 'block';
          };
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">ConstructionAxisInput Object
        </h1>
              Derived from: <a href="Base.htm">Base</a> Object
            <h2 class="api">
          Description
        </h2>A ConstructionAxisInput is a throwaway object used to create a ConstructionAxis The usage pattern is: a. create a ConstructionAxisInput (ConstructionAxes.CreateInput) b. call one of the member functions to specify how the ConstructionAxis is created c. create the ConstructionAxis (call ConstructionAxes.Add) d. stop referencing the ConstructionAxisInput (so it gets deleted).<br /><br />Defined in namespace "adsk.fusion" and the header file is "Fusion/Construction/ConstructionAxisInput.h".<h2 class="api">
            Methods
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_classType.htm">classType</a></td>
        <td class="api-list">Static function that all classes support that returns the type of the class as a string.  The returned string matches the string returned by the objectType property. For example if you have a reference to an object and you want to check if it's a SketchLine you can use myObject.objectType == fusion.SketchLine.classType().</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByCircularFace.htm">setByCircularFace</a></td>
        <td class="api-list">This input method is for creating an axis coincident with the axis of a  cylindrical, conical or torus face.
 This can result in a parametric or non-parametric construction axis depending  on whether the parent component is parametric or is a direct edit component.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByEdge.htm">setByEdge</a></td>
        <td class="api-list">This input method is for creating a construction axis from a specified linear/circular edge or sketch curve. This can result in a parametric or non-parametric construction axis depending  on whether the parent component is parametric or is a direct edit component.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByLine.htm">setByLine</a></td>
        <td class="api-list">This input method is for creating a non-parametric construction axis whose position in space is defined by an InfiniteLine3D object.
 This method of defining a construction axis is only valid when working in a direct edit model (do not capture design history). This is not valid when working in a parametric model and will fail.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByNormalToFaceAtPoint.htm">setByNormalToFaceAtPoint</a></td>
        <td class="api-list">This input method if for creating a construction axis normal to a specified face  or sketch profile and that passes through a specified point.  This can result in a parametric or non-parametric construction axis depending  on whether the parent component is parametric or is a direct edit component.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByPerpendicularAtPoint.htm">setByPerpendicularAtPoint</a></td>
        <td class="api-list">This input method is for creating an axis that is normal to a face at a specified point.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByTwoPlanes.htm">setByTwoPlanes</a></td>
        <td class="api-list">This input method is for creating a construction axis coincident with the  intersection of two planes or planar faces. This will fail if the the two planes are parallel. This can result in a parametric or non-parametric construction axis depending  on whether the parent component is parametric or is a direct edit component.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_setByTwoPoints.htm">setByTwoPoints</a></td>
        <td class="api-list">This input method is for creating a construction axis that passes through the two points  (work points, sketch points or vertices). This will fail if the the two points are coincident. This can result in a parametric or non-parametric construction axis depending  on whether the parent component is parametric or is a direct edit component.</td>
      </tr>
    </Table>
    <h2 class="api">
            Properties
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list" style="width:1%;">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_creationOccurrence.htm">creationOccurrence</a></td>
        <td class="api-list">In order for geometry to be transformed correctly, an Occurrence for creation needs  to be specified when the ConstructionAxis is created based on geometry (e.g. a straight edge) in another component AND (the ConstructionAxis) is not in the  root component. The CreationOccurrence is analogous to the active occurrence in the UI</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_isValid.htm">isValid</a></td>
        <td class="api-list">Indicates if this object is still valid, i.e. hasn't been deleted or some other action done to invalidate the reference.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_objectType.htm">objectType</a></td>
        <td class="api-list">Returns a string indicating the type of the object.</td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisInput_targetBaseOrFormFeature.htm">targetBaseOrFormFeature</a></td>
        <td class="api-list">When creating a construction axis that is owned by a base or form feature, set this property to the  base or form feature you want to associate the new construction plane with. By default, this is null, meaning it will not be associated with a base or form feature.
 Because of a current limitation, if you want to create a construction axis associated with a base or form feature, you must set this property AND call the edit method of the base or form feature, create the feature, and then call the finishEdit method of the base or form feature. The base or form feature must be in an "edit" state to be able to add any additional items to it.</td>
      </tr>
    </Table>
    <h2 class="api">
            Accessed From
          </h2><a href="ConstructionAxes_createInput.htm">ConstructionAxes.createInput</a><h2 class="api">
            Samples
          </h2>
    <Table class="api-list">
      <tr class="header">
        <td class="api-list">
                Name
              </td>
        <td class="api-list">
                Description
              </td>
      </tr>
      <tr>
        <td class="api-list"><a href="ConstructionAxisSample_Sample.htm">Construction Axis API Sample</a></td>
        <td class="api-list">Demonstrates creating construction axis in various ways.</td>
      </tr>
    </Table>
    <h2 class="api">
            Version
          </h2>
        Introduced in version August 2014<br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(ConstructionAxisInput%20Object%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>