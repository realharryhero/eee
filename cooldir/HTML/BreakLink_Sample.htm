<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="topic-type" content="reference-adsk">
    <meta name="helpsystempath" content="/view/NINVFUS/ENU/">
    <link rel="canonical" href="http://help.autodesk.com/cloudhelp/ENU/Fusion-360-API/files/BreakLink_Sample.htm">
    <meta name="product" content="NINVFUS">
    <meta name="release" content="NA">
    <meta name="book" content="Developer">
    <meta name="component" content="Fusion-360-API">
    <meta name="created" content="">
    <meta name="user-comments" content="enable">
    <meta name="description" content="Break Link Sample">
    <meta name="topicid" content="GUID-7f7547c0-702d-11e7-8712-6c0b84aa5a3f">
    <meta name="experiencelevel" content="expert">
    <meta name="audience" content="programmer">
    <meta name="language" content="ENU">
    <title>Break Link</title>
    <link rel="stylesheet" href="../Style/jquery-ui.css"><script src="../Scripts/jquery-1.11.1.js"></script><script src="../Scripts/jquery-ui.js"></script><link rel="stylesheet" type="text/css" href="../Style/APIHelp-chm.css">
    <link rel="stylesheet" type="text/css" href="/view/clientframework/client.css"><script type="text/javascript" src="/view/clientframework/client.js"></script><script>
          // This turns on the display of the copyright notice which is not visible by default.
          // Because the head is removed when used in the web help, this function will only exists
          // when the chm help is being created.
          window.onload = function() {
          copyrightElement = document.getElementById('CopyrightNotice');
          copyrightElement.style.display = 'block';
          };
        </script><script>
          $(function() {
          $( "#tabs" ).tabs();
          });
        </script></head>
  <body>
    <link rel="stylesheet" type="text/css" href="../Style/APIHelp.css">
    <h1 class="api">Break Link API Sample
        </h1>
    <h2 class="api">
          Description
        </h2>When the component this occurrence references is an external reference, this will break the link and create a local Component that this occurrence will reference.<h2 class="api">
          Code Samples
        </h2>
    <div id="tabs">
      <ul>
        <li><a href="#Python">Python</a></li>
        <li><a href="#C++">C++</a></li>
      </ul>
      <div id="Python" class="api-code">
        <pre class="api-code"><span style="color:blue"># Author-</span>
<span style="color:blue"># Description-</span>
import adsk.core, adsk.fusion, traceback

def run(context):
    ui = None
    try:
        app = adsk.core.Application.get()
        ui = app.userInterface

        product = app.activeProduct
        design = adsk.fusion.Design.cast(product)

        <span style="color:blue"># Get the root component of the active design.</span>
        rootComp = design.rootComponent

        <span style="color:blue"># Get the occurrence of the first sub component, and this occurrence references an external reference component</span>
        occ1 = rootComp.occurrences.item(0)

        <span style="color:blue"># Break the link and create a local component that this occurrence will reference</span>
        ret = occ1.breakLink()
        print(ret)

        <span style="color:blue"># Get the first sub component</span>
        subComp1 = occ1.component

        <span style="color:blue"># Get the occurrence of the first sub component of above sub component</span>
        occ2 = subComp1.occurrences.item(0)

        <span style="color:blue"># Create a proxy for the occurrence</span>
        occ2Proxy = occ2.createForAssemblyContext(occ1)

        <span style="color:blue"># Break the link and create a local component that this occurrence will reference</span>
        ret = occ2Proxy.breakLink()
        print(ret)
    except:
        if ui:
            ui.messageBox('Failed:\n{}'.format(traceback.format_exc()))</pre>
      </div>
      <div id="C++" class="api-code">
        <pre class="api-code">#include &lt;Core/Application/Application.h&gt;
#include &lt;Core/UserInterface/UserInterface.h&gt;
#include &lt;Fusion/Fusion/Design.h&gt;
#include &lt;Fusion/Components/Occurrence.h&gt;
#include &lt;Fusion/Components/Occurrences.h&gt;
#include &lt;Fusion/Components/Component.h&gt;


using namespace adsk::core;
using namespace adsk::fusion;

Ptr&lt;UserInterface&gt; ui;

extern "C" XI_EXPORT bool run(const char* context)
{
	Ptr&lt;Application&gt; app = Application::get();
	if (!app)
		return false;

	ui = app-&gt;userInterface();
	if (!ui)
		return false;

	Ptr&lt;Design&gt; design = app-&gt;activeProduct();
	if (!design)
		return false;

	<span style="color:blue">// Get the root component of the active design</span>
	Ptr&lt;Component&gt; rootComp = design-&gt;rootComponent();
	if (!rootComp)
		return false;

	<span style="color:blue">// Get the occurrence of the first sub component under root component</span>
	Ptr&lt;Occurrences&gt; occs1 = rootComp-&gt;occurrences();
	if (!occs1)
		return false;
	Ptr&lt;Occurrence&gt; occ1 = occs1-&gt;item(0);
	if (!occ1)
		return false;

	<span style="color:blue">// Break the link and create a local component that this occurrence will reference</span>
	bool ret = occ1-&gt;breakLink();
	if (!ret)
		return false;

	<span style="color:blue">// Get the first sub component under root component</span>
	Ptr&lt;Component&gt; subComp1 = occ1-&gt;component();
	if (!subComp1)
		return false;

	<span style="color:blue">// Get the occurrence of the first sub component under above sub component</span>
	Ptr&lt;Occurrences&gt; occs2 = subComp1-&gt;occurrences();
	if (!occs2)
		return false;
	Ptr&lt;Occurrence&gt; occ2 = occs2-&gt;item(0);
	if (!occ2)
		return false;

	<span style="color:blue">// Create a proxy for the occurrence</span>
	Ptr&lt;Occurrence&gt; occ2Proxy = occ2-&gt;createForAssemblyContext(occ1);
	if (!occ2Proxy)
		return false;
	
	<span style="color:blue">// Break the link and create a local component that this occurrence will reference</span>
	ret = occ2Proxy-&gt;breakLink();
	if (!ret)
		return false;

	return true;
}


#ifdef XI_WIN

#include &lt;windows.h&gt;

BOOL APIENTRY DllMain(HMODULE hmodule, DWORD reason, LPVOID reserved)
{
	switch (reason)
	{
	case DLL_PROCESS_ATTACH:
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

#endif <span style="color:blue">// XI_WIN</span></pre>
      </div>
    </div><br><br><div id="CopyrightNotice" style="display:none;">
      <hr>
      <table width="100%" style="font-size:15">
        <tr>
          <td align="left">
                Â© Copyright 2017 Autodesk, Inc.
              </td>
          <td align="right"><a href="mailto:mfg.api.help.comments@autodesk.com&subject=Fusion%20December 2017%20API%20Help%20(BreakLink%20Sample%20Help%20Topic)">Comment on this page.</a></td>
        </tr>
      </table>
    </div>
  </body>
</html>